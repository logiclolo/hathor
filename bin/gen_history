#!/bin/sh

source $HATHOR/config/basic_config
source $HATHOR/lib/libfirmwareinfo
source $HATHOR/lib/libmessage

# This script is used for generate history.txt file
FILEPP="filepp -e -I$OUTPUT_DIR"
HISTORY_TEMPLATE="history.txt.pp"
HISTORY_THIS_TIME="$OUTPUT_DIR/history-$PRODUCTVER.txt"

# generate firmware connfig 
$HATHOR/bin/gen_firmware_config

if [ -f $FIRMWARE_CONFIG ] ; then 
	source $FIRMWARE_CONFIG
else
	warn "$FIRMWARE_CONFIG not found, quit!"
	exit 1;
fi

# gathering fixed bugs from bugzilla
$EXEC/get_fixed_bugs
if [ "$?" != "0" ] ; then
	warn "Get fixed bugs error, quit"
	exit 1
fi

# gathering history related stuff from athena
$EXEC/get_previous_firmware_history
if [ "$?" != "0" ]; then
	if [ "$FIRMWARE_VERSION" == "0100a" ]; then
		info "看來你是第一次 release $PRODUCTVER，所以找不到 history.txt 也是很正常的。"
		touch $HISTORY_ATHENA
	else
		warn "Get previous firmware history error, quit"
		exit 1
	fi
fi

# gathering module versions, we will filter out stuff that we don't care (such as open source programs)
RunCommandWithSpinningIndicator "$EXEC/gen_module_versions" "產生模組版本資訊"
if [ "$?" != "0" ]; then
	warn "Get module versions error, quit"
	exit 1
fi

# all done, generate history.txt
echo '產生 history.txt...'
$FILEPP $HATHOR/template/$HISTORY_TEMPLATE -o $HISTORY_THIS_TIME
if [ "$?" != "0" ]; then
	warn "Generate history.txt failed, quit"
	exit 1
fi

# 把 athena 上面的編碼轉成 utf-8
encoding_of_previous_history=`file -bi $HISTORY_ATHENA | awk -F\; '{print $2}' | awk -F= '{print $2}'`
if [ "$encoding_of_previous_history" == "" ]; then
	echo "iconv) Unable to determine previous encoding!" 1>&2 
elif [ "$encoding_of_previous_history" != "utf-8" ]; then
	iconv -f $encoding_of_previous_history -t utf-8 $HISTORY_ATHENA > $HISTORY_ATHENA.utf8
	[ "$?" != "0" ] && echo "iconv error!!!!!"
	mv $HISTORY_ATHENA.utf8 $HISTORY_ATHENA
fi

# 轉換格式為 dos format (CRLF)
unix2dos $HISTORY_ATHENA
cp $HISTORY_ATHENA $RELEASE_DIR
unix2dos $HISTORY_THIS_TIME 
cp $HISTORY_THIS_TIME $RELEASE_DIR

info "history.txt 已產生至 $RELEASE_DIR/history-$PRODUCTVER.txt"
