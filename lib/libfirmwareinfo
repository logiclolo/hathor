FIRMWARE_VERSION=`echo $PRODUCTVER | awk -F- '{print $3}'`
FIRMWARE_BRAND=`echo $PRODUCTVER | awk -F- '{print $2}'`


function hathor_get_firmware_name
{
	HATHOR_FIRMWARE_NAME="$PRODUCTNAME-$FIRMWARE_BRAND firmware $FIRMWARE_VERSION"
}

function hathor_get_firmware_path
{
	FIRMWARE_PATH_SERVER="\\\\athena\\SQA"
	FIRMWARE_PATH_SUFFIX="$FIRMWARE_BRAND\\Multi_lingual\\Application\\Firmware\\English"
	FIRMWARE_PATH_SERVER_REVERTED=`echo "$FIRMWARE_PATH_SERVER" | sed -e 's:\\\\:\/:g'`
	HATHOR_FIRMWARE_PATH_PREFIX="\\Project\\$PRODUCTNAME\\$FIRMWARE_PATH_SUFFIX"
	HATHOR_FIRMWARE_PATH="$FIRMWARE_PATH_SERVER\\$HATHOR_FIRMWARE_PATH_PREFIX\\$FIRMWARE_VERSION"
	HATHOR_FIRMWARE_PATH_PREFIX_REVERTED=`echo $HATHOR_FIRMWARE_PATH_PREFIX | sed -e 's:\\\\:\/:g'`
}

function hathor_get_history_path 
{
	local SMBSERVER=$1
	local SMBPATH=$2
	local USER=$3
	local PASS=$4
	export USER=$USER ; export PASSWD=$PASS

	local temp=`mktemp -d`
	pushd $temp 2>&1 > /dev/null
	smbclient $SMBSERVER -D $SMBPATH -c 'exit'
	[ "$?" != "0" ] && return 1
	smbclient $SMBSERVER -D $SMBPATH -c 'get history.txt; get history.txt.lnk'  2>&1 > /dev/null
	if [ -f "history.txt.lnk" ] ; then
		HATHOR_FIRMWARE_HISTORY_PATH=`strings history.txt.lnk | grep "Project_ReleaseNote" | sed -e 's:\\\\:\/:g'`
		HATHOR_FIRMWARE_HISTORY_NAME=`basename $HATHOR_FIRMWARE_HISTORY_PATH`
		HATHOR_FIRMWARE_HISTORY_FOLDER=`dirname $HATHOR_FIRMWARE_HISTORY_PATH`
	else 
		HATHOR_FIRMWARE_HISTORY_PATH="$SMBPATH/history.txt"
		HATHOR_FIRMWARE_HISTORY_NAME="history.txt"
		HATHOR_FIRMWARE_HISTORY_FOLDER=`dirname $HATHOR_FIRMWARE_HISTORY_PATH`
	fi

	unset USER; unset PASSWD

	rm -f history.txt history.txt.lnk
	popd 2>&1 > /dev/null && rm -rf $temp
	return 0
}

function hathor_get_firmware_file
{
	HATHOR_FIRMWARE_FILE="$PRODUCTVER.flash.pkg"
}

function hathor_get_firmware_end_date
{
	HATHOR_FIRMWARE_END_DATE=`date "+%Y/%m/%d"`
}

function hathor_get_author
{
	HATHOR_AUTHOR=`whoami`
}

function hathor_get_firmware_type
{
	echo $FIRMWARE_VERSION | grep "[0-9][0-9][0-9][a-z]$"
	[ "$?" = "0" ] && HATHOR_FIRMWARE_TYPE="General"
	[ "$?" = "1" ] && HATHOR_FIRMWARE_TYPE="Sample"
}

function hathor_get_firmware_version
{
	HATHOR_FIRMWARE_VERSION=$PRODUCTVER
}

function hathor_get_plugin_version
{
	source $HATHOR/lib/libpluginversion
}

function hathor_get_webpage_language
{
	HATHOR_WEBPAGE_LANGUAGE="de,en,es,fr,it,jp,pt,sc,tc"
}

function hathor_get_commonbug_list
{
	HATHOR_COMMONBUG_LIST=""
}

