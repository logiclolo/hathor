copy_firmware()
{
	pushd $RELEASE_DIR 2>&1 > /dev/null

	FW_DIR="${PRODUCTDIR}/release/package/${PRODUCTVER}"

	cp ${FW_DIR}/${PRODUCTVER}.flash.* $RELEASE_DIR 
	[ -f $PRODUCTVER.flash.pkg ] && md5sum $PRODUCTVER.flash.pkg > $PRODUCTVER.md5

	# run platform dependent copy_fiware_xxx routine, see below
	declare -F "copy_firmware_${soc_platform}" && eval "copy_firmware_${soc_platform}" 

	popd 2>&1 > /dev/null
}

copy_history ()
{
	cp $OUTPUT_DIR/history-$PRODUCTVER.txt $RELEASE_DIR
}

copy_image_lib_release_note ()
{
    svn export $HATHOR_IMAGE_LIB_RELEASE_NOTE $$.temp.txt > /dev/null
    mv -f $$.temp.txt "$RELEASE_DIR/image_library_release_note.log"
}

copy_supportlist ()
{
	$HATHOR/bin/supportlist_output.py
        mv *.xls "$RELEASE_DIR/support_list.xls" 
}

copy_filesystem_log ()
{
	cp $PRODUCTDIR/release/log/* $RELEASE_DIR
}

# platform dependent firmware copying
function copy_firmware_mozart3()
{
	ROMFW="${FW_DIR}/${PRODUCTVER}.*.rom"
	[ -f "$ROMFW" ] && cp $ROMFW $RELEASE_DIR
	SDFW="${FW_DIR}/sdfw/sd.rom"
	[ -f "$SDFW" ] && cp $SDFW $RELEASE_DIR

	[ -f $PRODUCTVER.flash.rom ] && md5sum $PRODUCTVER.flash.rom >> $PRODUCTVER.md5
}

function copy_firmware_dm8127()
{
	if [ -f "${FW_DIR}/sdboot.tar.bz2" ]; then 
		cp ${FW_DIR}/sdboot.tar.bz2 $RELEASE_DIR
		md5sum sdboot.tar.bz2 >> $PRODUCTVER.md5
	fi
}

# tell vim to use shell script highlight automagically
# vim:ft=sh
